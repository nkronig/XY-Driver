
Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  00000d15  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000011  00008c70  00000c70  00000d04  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000030  00803e00  00803e00  00000d15  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000d15  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d74  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000000a0  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002f6d  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001c84  00000000  00000000  00003dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000070e  00000000  00000000  00005a41  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  00006150  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000141e  00000000  00000000  00006330  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000053b  00000000  00000000  0000774e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00007c89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1f c0       	rjmp	.+62     	; 0x40 <__ctors_end>
   2:	39 c0       	rjmp	.+114    	; 0x76 <__bad_interrupt>
   4:	38 c0       	rjmp	.+112    	; 0x76 <__bad_interrupt>
   6:	37 c0       	rjmp	.+110    	; 0x76 <__bad_interrupt>
   8:	36 c0       	rjmp	.+108    	; 0x76 <__bad_interrupt>
   a:	35 c0       	rjmp	.+106    	; 0x76 <__bad_interrupt>
   c:	34 c0       	rjmp	.+104    	; 0x76 <__bad_interrupt>
   e:	33 c0       	rjmp	.+102    	; 0x76 <__bad_interrupt>
  10:	32 c0       	rjmp	.+100    	; 0x76 <__bad_interrupt>
  12:	31 c0       	rjmp	.+98     	; 0x76 <__bad_interrupt>
  14:	30 c0       	rjmp	.+96     	; 0x76 <__bad_interrupt>
  16:	2f c0       	rjmp	.+94     	; 0x76 <__bad_interrupt>
  18:	2e c0       	rjmp	.+92     	; 0x76 <__bad_interrupt>
  1a:	2e c1       	rjmp	.+604    	; 0x278 <__vector_13>
  1c:	2c c0       	rjmp	.+88     	; 0x76 <__bad_interrupt>
  1e:	2b c0       	rjmp	.+86     	; 0x76 <__bad_interrupt>
  20:	2a c0       	rjmp	.+84     	; 0x76 <__bad_interrupt>
  22:	29 c0       	rjmp	.+82     	; 0x76 <__bad_interrupt>
  24:	28 c0       	rjmp	.+80     	; 0x76 <__bad_interrupt>
  26:	27 c0       	rjmp	.+78     	; 0x76 <__bad_interrupt>
  28:	26 c0       	rjmp	.+76     	; 0x76 <__bad_interrupt>
  2a:	25 c0       	rjmp	.+74     	; 0x76 <__bad_interrupt>
  2c:	3a c1       	rjmp	.+628    	; 0x2a2 <__vector_22>
  2e:	23 c0       	rjmp	.+70     	; 0x76 <__bad_interrupt>
  30:	22 c0       	rjmp	.+68     	; 0x76 <__bad_interrupt>
  32:	21 c0       	rjmp	.+66     	; 0x76 <__bad_interrupt>

00000034 <__trampolines_end>:
  34:	63 64       	ori	r22, 0x43	; 67
  36:	69 6e       	ori	r22, 0xE9	; 233
  38:	6f 70       	andi	r22, 0x0F	; 15
  3a:	73 75       	andi	r23, 0x53	; 83
  3c:	78 58       	subi	r23, 0x88	; 136
  3e:	5b 00       	.word	0x005b	; ????

00000040 <__ctors_end>:
  40:	11 24       	eor	r1, r1
  42:	1f be       	out	0x3f, r1	; 63
  44:	cf ef       	ldi	r28, 0xFF	; 255
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df e3       	ldi	r29, 0x3F	; 63
  4a:	de bf       	out	0x3e, r29	; 62

0000004c <__do_copy_data>:
  4c:	1e e3       	ldi	r17, 0x3E	; 62
  4e:	a0 e0       	ldi	r26, 0x00	; 0
  50:	be e3       	ldi	r27, 0x3E	; 62
  52:	e1 e8       	ldi	r30, 0x81	; 129
  54:	fc e0       	ldi	r31, 0x0C	; 12
  56:	02 c0       	rjmp	.+4      	; 0x5c <__do_copy_data+0x10>
  58:	05 90       	lpm	r0, Z+
  5a:	0d 92       	st	X+, r0
  5c:	a0 30       	cpi	r26, 0x00	; 0
  5e:	b1 07       	cpc	r27, r17
  60:	d9 f7       	brne	.-10     	; 0x58 <__do_copy_data+0xc>

00000062 <__do_clear_bss>:
  62:	2e e3       	ldi	r18, 0x3E	; 62
  64:	a0 e0       	ldi	r26, 0x00	; 0
  66:	be e3       	ldi	r27, 0x3E	; 62
  68:	01 c0       	rjmp	.+2      	; 0x6c <.do_clear_bss_start>

0000006a <.do_clear_bss_loop>:
  6a:	1d 92       	st	X+, r1

0000006c <.do_clear_bss_start>:
  6c:	a0 33       	cpi	r26, 0x30	; 48
  6e:	b2 07       	cpc	r27, r18
  70:	e1 f7       	brne	.-8      	; 0x6a <.do_clear_bss_loop>
  72:	6b d1       	rcall	.+726    	; 0x34a <main>
  74:	fb c5       	rjmp	.+3062   	; 0xc6c <_exit>

00000076 <__bad_interrupt>:
  76:	c4 cf       	rjmp	.-120    	; 0x0 <__vectors>

00000078 <map>:
{
	TCB0.CCMP = 0xFFFF;

	TCB0.INTCTRL = 1 << TCB_CAPT_bp;

	TCB0.CTRLA = TCB_CLKSEL_CLKDIV1_gc | 1 << TCB_ENABLE_bp;
  78:	4f 92       	push	r4
  7a:	5f 92       	push	r5
  7c:	6f 92       	push	r6
  7e:	7f 92       	push	r7
  80:	af 92       	push	r10
  82:	bf 92       	push	r11
  84:	cf 92       	push	r12
  86:	df 92       	push	r13
  88:	ef 92       	push	r14
  8a:	ff 92       	push	r15
  8c:	0f 93       	push	r16
  8e:	1f 93       	push	r17
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	cd b7       	in	r28, 0x3d	; 61
  96:	de b7       	in	r29, 0x3e	; 62
  98:	29 01       	movw	r4, r18
  9a:	3a 01       	movw	r6, r20
  9c:	9b 01       	movw	r18, r22
  9e:	ac 01       	movw	r20, r24
  a0:	24 19       	sub	r18, r4
  a2:	35 09       	sbc	r19, r5
  a4:	46 09       	sbc	r20, r6
  a6:	57 09       	sbc	r21, r7
  a8:	89 89       	ldd	r24, Y+17	; 0x11
  aa:	9a 89       	ldd	r25, Y+18	; 0x12
  ac:	ab 89       	ldd	r26, Y+19	; 0x13
  ae:	bc 89       	ldd	r27, Y+20	; 0x14
  b0:	bc 01       	movw	r22, r24
  b2:	cd 01       	movw	r24, r26
  b4:	6a 19       	sub	r22, r10
  b6:	7b 09       	sbc	r23, r11
  b8:	8c 09       	sbc	r24, r12
  ba:	9d 09       	sbc	r25, r13
  bc:	fd d1       	rcall	.+1018   	; 0x4b8 <__mulsi3>
  be:	a8 01       	movw	r20, r16
  c0:	97 01       	movw	r18, r14
  c2:	24 19       	sub	r18, r4
  c4:	35 09       	sbc	r19, r5
  c6:	46 09       	sbc	r20, r6
  c8:	57 09       	sbc	r21, r7
  ca:	05 d2       	rcall	.+1034   	; 0x4d6 <__divmodsi4>
  cc:	c6 01       	movw	r24, r12
  ce:	b5 01       	movw	r22, r10
  d0:	62 0f       	add	r22, r18
  d2:	73 1f       	adc	r23, r19
  d4:	84 1f       	adc	r24, r20
  d6:	95 1f       	adc	r25, r21
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	1f 91       	pop	r17
  de:	0f 91       	pop	r16
  e0:	ff 90       	pop	r15
  e2:	ef 90       	pop	r14
  e4:	df 90       	pop	r13
  e6:	cf 90       	pop	r12
  e8:	bf 90       	pop	r11
  ea:	af 90       	pop	r10
  ec:	7f 90       	pop	r7
  ee:	6f 90       	pop	r6
  f0:	5f 90       	pop	r5
  f2:	4f 90       	pop	r4
  f4:	08 95       	ret

000000f6 <Clamp>:
  f6:	86 17       	cp	r24, r22
  f8:	97 07       	cpc	r25, r23
  fa:	2c f0       	brlt	.+10     	; 0x106 <Clamp+0x10>
  fc:	48 17       	cp	r20, r24
  fe:	59 07       	cpc	r21, r25
 100:	1c f4       	brge	.+6      	; 0x108 <Clamp+0x12>
 102:	ca 01       	movw	r24, r20
 104:	08 95       	ret
 106:	cb 01       	movw	r24, r22
 108:	08 95       	ret

0000010a <timerAInit>:
 10a:	e0 e0       	ldi	r30, 0x00	; 0
 10c:	f2 e0       	ldi	r31, 0x02	; 2
 10e:	82 81       	ldd	r24, Z+2	; 0x02
 110:	8f 60       	ori	r24, 0x0F	; 15
 112:	82 83       	std	Z+2, r24	; 0x02
 114:	e0 e0       	ldi	r30, 0x00	; 0
 116:	fa e0       	ldi	r31, 0x0A	; 10
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	86 a3       	std	Z+38, r24	; 0x26
 11c:	87 a3       	std	Z+39, r24	; 0x27
 11e:	83 81       	ldd	r24, Z+3	; 0x03
 120:	81 60       	ori	r24, 0x01	; 1
 122:	83 83       	std	Z+3, r24	; 0x03
 124:	81 81       	ldd	r24, Z+1	; 0x01
 126:	87 61       	ori	r24, 0x17	; 23
 128:	81 83       	std	Z+1, r24	; 0x01
 12a:	80 81       	ld	r24, Z
 12c:	87 60       	ori	r24, 0x07	; 7
 12e:	80 83       	st	Z, r24
 130:	08 95       	ret

00000132 <clkInit>:
}
void clkInit(void){
	CPU_CCP = 0xD8;
 132:	88 ed       	ldi	r24, 0xD8	; 216
 134:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLB = 0x00;
 136:	e0 e6       	ldi	r30, 0x60	; 96
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	11 82       	std	Z+1, r1	; 0x01
	CPU_CCP = 0xD8;
 13c:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.OSC20MCTRLA = 0x02;
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	80 8b       	std	Z+16, r24	; 0x10
 142:	08 95       	ret

00000144 <setMotor>:
}
void setMotor(int m, long speed){
 144:	0f 93       	push	r16
 146:	1f 93       	push	r17
	if(m == 0){
 148:	00 97       	sbiw	r24, 0x00	; 0
 14a:	09 f0       	breq	.+2      	; 0x14e <setMotor+0xa>
 14c:	49 c0       	rjmp	.+146    	; 0x1e0 <setMotor+0x9c>
		if((~PORTA.IN & 0x10) && (speed > 10)){
 14e:	20 91 08 04 	lds	r18, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7f8408>
 152:	24 fd       	sbrc	r18, 4
 154:	05 c0       	rjmp	.+10     	; 0x160 <setMotor+0x1c>
 156:	4b 30       	cpi	r20, 0x0B	; 11
 158:	51 05       	cpc	r21, r1
 15a:	61 05       	cpc	r22, r1
 15c:	71 05       	cpc	r23, r1
 15e:	5c f4       	brge	.+22     	; 0x176 <setMotor+0x32>
			speed = 300;
		}
		else if((~PORTA.IN & 0x20) && (speed < -10)){
 160:	20 91 08 04 	lds	r18, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7f8408>
 164:	25 fd       	sbrc	r18, 5
 166:	10 c0       	rjmp	.+32     	; 0x188 <setMotor+0x44>
 168:	46 3f       	cpi	r20, 0xF6	; 246
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	52 07       	cpc	r21, r18
 16e:	62 07       	cpc	r22, r18
 170:	72 07       	cpc	r23, r18
 172:	34 f0       	brlt	.+12     	; 0x180 <setMotor+0x3c>
 174:	09 c0       	rjmp	.+18     	; 0x188 <setMotor+0x44>
	CLKCTRL.OSC20MCTRLA = 0x02;
}
void setMotor(int m, long speed){
	if(m == 0){
		if((~PORTA.IN & 0x10) && (speed > 10)){
			speed = 300;
 176:	4c e2       	ldi	r20, 0x2C	; 44
 178:	51 e0       	ldi	r21, 0x01	; 1
 17a:	60 e0       	ldi	r22, 0x00	; 0
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	04 c0       	rjmp	.+8      	; 0x188 <setMotor+0x44>
		}
		else if((~PORTA.IN & 0x20) && (speed < -10)){
			speed = 300;
 180:	4c e2       	ldi	r20, 0x2C	; 44
 182:	51 e0       	ldi	r21, 0x01	; 1
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	70 e0       	ldi	r23, 0x00	; 0
		}
		
		if(speed <= 10 && speed >= -10){
 188:	8a 01       	movw	r16, r20
 18a:	9b 01       	movw	r18, r22
 18c:	06 5f       	subi	r16, 0xF6	; 246
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
 190:	2f 4f       	sbci	r18, 0xFF	; 255
 192:	3f 4f       	sbci	r19, 0xFF	; 255
 194:	05 31       	cpi	r16, 0x15	; 21
 196:	11 05       	cpc	r17, r1
 198:	21 05       	cpc	r18, r1
 19a:	31 05       	cpc	r19, r1
 19c:	28 f4       	brcc	.+10     	; 0x1a8 <setMotor+0x64>
			TCA0.SPLIT.LCMP0 = 0;
 19e:	e0 e0       	ldi	r30, 0x00	; 0
 1a0:	fa e0       	ldi	r31, 0x0A	; 10
 1a2:	10 a6       	std	Z+40, r1	; 0x28
			TCA0.SPLIT.LCMP1 = 0;
 1a4:	12 a6       	std	Z+42, r1	; 0x2a
 1a6:	1c c0       	rjmp	.+56     	; 0x1e0 <setMotor+0x9c>
		}
		else if (speed == 300)
 1a8:	4c 32       	cpi	r20, 0x2C	; 44
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	52 07       	cpc	r21, r18
 1ae:	61 05       	cpc	r22, r1
 1b0:	71 05       	cpc	r23, r1
 1b2:	31 f4       	brne	.+12     	; 0x1c0 <setMotor+0x7c>
		{
			TCA0.SPLIT.LCMP0 = 255;
 1b4:	e0 e0       	ldi	r30, 0x00	; 0
 1b6:	fa e0       	ldi	r31, 0x0A	; 10
 1b8:	2f ef       	ldi	r18, 0xFF	; 255
 1ba:	20 a7       	std	Z+40, r18	; 0x28
			TCA0.SPLIT.LCMP1 = 255;
 1bc:	22 a7       	std	Z+42, r18	; 0x2a
 1be:	10 c0       	rjmp	.+32     	; 0x1e0 <setMotor+0x9c>
		}
		else if(speed > 0){
 1c0:	14 16       	cp	r1, r20
 1c2:	15 06       	cpc	r1, r21
 1c4:	16 06       	cpc	r1, r22
 1c6:	17 06       	cpc	r1, r23
 1c8:	2c f4       	brge	.+10     	; 0x1d4 <setMotor+0x90>
			TCA0.SPLIT.LCMP0 = speed;
 1ca:	e0 e0       	ldi	r30, 0x00	; 0
 1cc:	fa e0       	ldi	r31, 0x0A	; 10
 1ce:	40 a7       	std	Z+40, r20	; 0x28
			TCA0.SPLIT.LCMP1 = 0;
 1d0:	12 a6       	std	Z+42, r1	; 0x2a
 1d2:	06 c0       	rjmp	.+12     	; 0x1e0 <setMotor+0x9c>
		}
		else{
			TCA0.SPLIT.LCMP0 = 0;
 1d4:	e0 e0       	ldi	r30, 0x00	; 0
 1d6:	fa e0       	ldi	r31, 0x0A	; 10
 1d8:	10 a6       	std	Z+40, r1	; 0x28
			TCA0.SPLIT.LCMP1 = 255-speed;
 1da:	24 2f       	mov	r18, r20
 1dc:	20 95       	com	r18
 1de:	22 a7       	std	Z+42, r18	; 0x2a
		}
	}
	if(m == 1){
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	09 f0       	breq	.+2      	; 0x1e6 <setMotor+0xa2>
 1e4:	46 c0       	rjmp	.+140    	; 0x272 <__DATA_REGION_LENGTH__+0x72>

		if((~PORTA.IN & 0x40) && (speed > 10)){
 1e6:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7f8408>
 1ea:	86 fd       	sbrc	r24, 6
 1ec:	05 c0       	rjmp	.+10     	; 0x1f8 <setMotor+0xb4>
 1ee:	4b 30       	cpi	r20, 0x0B	; 11
 1f0:	51 05       	cpc	r21, r1
 1f2:	61 05       	cpc	r22, r1
 1f4:	71 05       	cpc	r23, r1
 1f6:	5c f4       	brge	.+22     	; 0x20e <__DATA_REGION_LENGTH__+0xe>
			speed = 300;
		}
		else if((~PORTA.IN & 0x80) && (speed < -10)){
 1f8:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7f8408>
 1fc:	88 23       	and	r24, r24
 1fe:	84 f0       	brlt	.+32     	; 0x220 <__DATA_REGION_LENGTH__+0x20>
 200:	46 3f       	cpi	r20, 0xF6	; 246
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	58 07       	cpc	r21, r24
 206:	68 07       	cpc	r22, r24
 208:	78 07       	cpc	r23, r24
 20a:	34 f0       	brlt	.+12     	; 0x218 <__DATA_REGION_LENGTH__+0x18>
 20c:	09 c0       	rjmp	.+18     	; 0x220 <__DATA_REGION_LENGTH__+0x20>
		}
	}
	if(m == 1){

		if((~PORTA.IN & 0x40) && (speed > 10)){
			speed = 300;
 20e:	4c e2       	ldi	r20, 0x2C	; 44
 210:	51 e0       	ldi	r21, 0x01	; 1
 212:	60 e0       	ldi	r22, 0x00	; 0
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	04 c0       	rjmp	.+8      	; 0x220 <__DATA_REGION_LENGTH__+0x20>
		}
		else if((~PORTA.IN & 0x80) && (speed < -10)){
			speed = 300;
 218:	4c e2       	ldi	r20, 0x2C	; 44
 21a:	51 e0       	ldi	r21, 0x01	; 1
 21c:	60 e0       	ldi	r22, 0x00	; 0
 21e:	70 e0       	ldi	r23, 0x00	; 0
		}
		
		if(speed <= 10 && speed >= -10){
 220:	db 01       	movw	r26, r22
 222:	ca 01       	movw	r24, r20
 224:	0a 96       	adiw	r24, 0x0a	; 10
 226:	a1 1d       	adc	r26, r1
 228:	b1 1d       	adc	r27, r1
 22a:	45 97       	sbiw	r24, 0x15	; 21
 22c:	a1 05       	cpc	r26, r1
 22e:	b1 05       	cpc	r27, r1
 230:	28 f4       	brcc	.+10     	; 0x23c <__DATA_REGION_LENGTH__+0x3c>
			TCA0.SPLIT.LCMP2 = 0;
 232:	e0 e0       	ldi	r30, 0x00	; 0
 234:	fa e0       	ldi	r31, 0x0A	; 10
 236:	14 a6       	std	Z+44, r1	; 0x2c
			TCA0.SPLIT.HCMP0 = 0;
 238:	11 a6       	std	Z+41, r1	; 0x29
 23a:	1b c0       	rjmp	.+54     	; 0x272 <__DATA_REGION_LENGTH__+0x72>
		}
		else if (speed == 300)
 23c:	4c 32       	cpi	r20, 0x2C	; 44
 23e:	21 e0       	ldi	r18, 0x01	; 1
 240:	52 07       	cpc	r21, r18
 242:	61 05       	cpc	r22, r1
 244:	71 05       	cpc	r23, r1
 246:	31 f4       	brne	.+12     	; 0x254 <__DATA_REGION_LENGTH__+0x54>
		{
			TCA0.SPLIT.LCMP2 = 255;
 248:	e0 e0       	ldi	r30, 0x00	; 0
 24a:	fa e0       	ldi	r31, 0x0A	; 10
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	84 a7       	std	Z+44, r24	; 0x2c
			TCA0.SPLIT.HCMP0 = 255;
 250:	81 a7       	std	Z+41, r24	; 0x29
 252:	0f c0       	rjmp	.+30     	; 0x272 <__DATA_REGION_LENGTH__+0x72>
		}
		else if(speed > 0){
 254:	14 16       	cp	r1, r20
 256:	15 06       	cpc	r1, r21
 258:	16 06       	cpc	r1, r22
 25a:	17 06       	cpc	r1, r23
 25c:	2c f4       	brge	.+10     	; 0x268 <__DATA_REGION_LENGTH__+0x68>
			TCA0.SPLIT.LCMP2 = speed;
 25e:	e0 e0       	ldi	r30, 0x00	; 0
 260:	fa e0       	ldi	r31, 0x0A	; 10
 262:	44 a7       	std	Z+44, r20	; 0x2c
			TCA0.SPLIT.HCMP0 = 0;
 264:	11 a6       	std	Z+41, r1	; 0x29
 266:	05 c0       	rjmp	.+10     	; 0x272 <__DATA_REGION_LENGTH__+0x72>
		}
		else{
			TCA0.SPLIT.LCMP2 = 0;
 268:	e0 e0       	ldi	r30, 0x00	; 0
 26a:	fa e0       	ldi	r31, 0x0A	; 10
 26c:	14 a6       	std	Z+44, r1	; 0x2c
			TCA0.SPLIT.HCMP0 = 255-speed;
 26e:	40 95       	com	r20
 270:	41 a7       	std	Z+41, r20	; 0x29
		}
	}
}
 272:	1f 91       	pop	r17
 274:	0f 91       	pop	r16
 276:	08 95       	ret

00000278 <__vector_13>:
ISR(TCB0_INT_vect)
{
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	8f 93       	push	r24
 284:	ef 93       	push	r30
 286:	ff 93       	push	r31
	
	TCB0_INTFLAGS |= TCB_CAPT_bm;
 288:	e6 e4       	ldi	r30, 0x46	; 70
 28a:	fa e0       	ldi	r31, 0x0A	; 10
 28c:	80 81       	ld	r24, Z
 28e:	81 60       	ori	r24, 0x01	; 1
 290:	80 83       	st	Z, r24
}
 292:	ff 91       	pop	r31
 294:	ef 91       	pop	r30
 296:	8f 91       	pop	r24
 298:	0f 90       	pop	r0
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	0f 90       	pop	r0
 29e:	1f 90       	pop	r1
 2a0:	18 95       	reti

000002a2 <__vector_22>:
ISR(USART0_RXC_vect){
 2a2:	1f 92       	push	r1
 2a4:	0f 92       	push	r0
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	0f 92       	push	r0
 2aa:	11 24       	eor	r1, r1
 2ac:	2f 93       	push	r18
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
 2b2:	af 93       	push	r26
 2b4:	bf 93       	push	r27
 2b6:	ef 93       	push	r30
 2b8:	ff 93       	push	r31
	if (USART0_STATUS & USART_RXCIF_bm)
 2ba:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 2be:	88 23       	and	r24, r24
 2c0:	c4 f5       	brge	.+112    	; 0x332 <__vector_22+0x90>
	{
		uint8_t temp;
		temp = USART0_RXDATAL;
 2c2:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
		if(temp == 0x0A || pos >= 19 || temp == 0x00){
 2c6:	8a 30       	cpi	r24, 0x0A	; 10
 2c8:	31 f0       	breq	.+12     	; 0x2d6 <__vector_22+0x34>
 2ca:	90 91 03 3e 	lds	r25, 0x3E03	; 0x803e03 <pos>
 2ce:	93 31       	cpi	r25, 0x13	; 19
 2d0:	10 f4       	brcc	.+4      	; 0x2d6 <__vector_22+0x34>
 2d2:	81 11       	cpse	r24, r1
 2d4:	23 c0       	rjmp	.+70     	; 0x31c <__vector_22+0x7a>
			PORTB.OUTTGL |= 0x40;
 2d6:	e0 e2       	ldi	r30, 0x20	; 32
 2d8:	f4 e0       	ldi	r31, 0x04	; 4
 2da:	87 81       	ldd	r24, Z+7	; 0x07
 2dc:	80 64       	ori	r24, 0x40	; 64
 2de:	87 83       	std	Z+7, r24	; 0x07
			tempRec[pos] = 0x00;
 2e0:	e0 91 03 3e 	lds	r30, 0x3E03	; 0x803e03 <pos>
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	e9 5f       	subi	r30, 0xF9	; 249
 2e8:	f1 4c       	sbci	r31, 0xC1	; 193
 2ea:	10 82       	st	Z, r1
			pos = 0;
 2ec:	10 92 03 3e 	sts	0x3E03, r1	; 0x803e03 <pos>
			done ++;
 2f0:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <done>
 2f4:	8f 5f       	subi	r24, 0xFF	; 255
 2f6:	80 93 02 3e 	sts	0x3E02, r24	; 0x803e02 <done>
			for (int i = 0; i < BUFFER; i++)
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0a c0       	rjmp	.+20     	; 0x314 <__vector_22+0x72>
			{
				rec[i] = tempRec[i];
 300:	fc 01       	movw	r30, r24
 302:	e9 5f       	subi	r30, 0xF9	; 249
 304:	f1 4c       	sbci	r31, 0xC1	; 193
 306:	20 81       	ld	r18, Z
 308:	dc 01       	movw	r26, r24
 30a:	a4 5e       	subi	r26, 0xE4	; 228
 30c:	b1 4c       	sbci	r27, 0xC1	; 193
 30e:	2c 93       	st	X, r18
				tempRec[i]=0;
 310:	10 82       	st	Z, r1
		if(temp == 0x0A || pos >= 19 || temp == 0x00){
			PORTB.OUTTGL |= 0x40;
			tempRec[pos] = 0x00;
			pos = 0;
			done ++;
			for (int i = 0; i < BUFFER; i++)
 312:	01 96       	adiw	r24, 0x01	; 1
 314:	84 31       	cpi	r24, 0x14	; 20
 316:	91 05       	cpc	r25, r1
 318:	9c f3       	brlt	.-26     	; 0x300 <__vector_22+0x5e>
 31a:	0b c0       	rjmp	.+22     	; 0x332 <__vector_22+0x90>
				tempRec[i]=0;
			}
		}
		else
		{
			tempRec[pos] = temp;
 31c:	e0 91 03 3e 	lds	r30, 0x3E03	; 0x803e03 <pos>
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	e9 5f       	subi	r30, 0xF9	; 249
 324:	f1 4c       	sbci	r31, 0xC1	; 193
 326:	80 83       	st	Z, r24
			pos ++;
 328:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <pos>
 32c:	8f 5f       	subi	r24, 0xFF	; 255
 32e:	80 93 03 3e 	sts	0x3E03, r24	; 0x803e03 <pos>
		}
		
	}
	//USART0_STATUS |= USART_RXCIF_bm;
}
 332:	ff 91       	pop	r31
 334:	ef 91       	pop	r30
 336:	bf 91       	pop	r27
 338:	af 91       	pop	r26
 33a:	9f 91       	pop	r25
 33c:	8f 91       	pop	r24
 33e:	2f 91       	pop	r18
 340:	0f 90       	pop	r0
 342:	0f be       	out	0x3f, r0	; 63
 344:	0f 90       	pop	r0
 346:	1f 90       	pop	r1
 348:	18 95       	reti

0000034a <main>:
int main(void)
{
	PORTA.DIR &= 0x00;
 34a:	e0 e0       	ldi	r30, 0x00	; 0
 34c:	f4 e0       	ldi	r31, 0x04	; 4
 34e:	80 81       	ld	r24, Z
 350:	10 82       	st	Z, r1
	
	PORTB.DIR |= 0x78; // 0x38
 352:	e0 e2       	ldi	r30, 0x20	; 32
 354:	f4 e0       	ldi	r31, 0x04	; 4
 356:	80 81       	ld	r24, Z
 358:	88 67       	ori	r24, 0x78	; 120
 35a:	80 83       	st	Z, r24
	PORTC.DIR |= 0x08;
 35c:	e0 e4       	ldi	r30, 0x40	; 64
 35e:	f4 e0       	ldi	r31, 0x04	; 4
 360:	80 81       	ld	r24, Z
 362:	88 60       	ori	r24, 0x08	; 8
 364:	80 83       	st	Z, r24
	clkInit();
 366:	e5 de       	rcall	.-566    	; 0x132 <clkInit>
	//timerBInit();
	timerAInit();
 368:	d0 de       	rcall	.-608    	; 0x10a <timerAInit>
	
	USART_init();
 36a:	70 d0       	rcall	.+224    	; 0x44c <USART_init>
	printString("start");
 36c:	80 e7       	ldi	r24, 0x70	; 112
 36e:	9c e8       	ldi	r25, 0x8C	; 140
 370:	91 d0       	rcall	.+290    	; 0x494 <printString>
	
	sei();
 372:	78 94       	sei
	while (1)
	{
		//_delay_ms(100);
		//printString("start");
		if (done >= 1)
 374:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <done>
 378:	88 23       	and	r24, r24
 37a:	e1 f3       	breq	.-8      	; 0x374 <main+0x2a>
		{
			if (rec[0] == '!')
 37c:	80 91 1c 3e 	lds	r24, 0x3E1C	; 0x803e1c <rec>
 380:	81 32       	cpi	r24, 0x21	; 33
 382:	09 f0       	breq	.+2      	; 0x386 <main+0x3c>
 384:	60 c0       	rjmp	.+192    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
			{
				char *command = strtok(rec, "?");
 386:	66 e7       	ldi	r22, 0x76	; 118
 388:	7c e8       	ldi	r23, 0x8C	; 140
 38a:	8c e1       	ldi	r24, 0x1C	; 28
 38c:	9e e3       	ldi	r25, 0x3E	; 62
 38e:	f7 d0       	rcall	.+494    	; 0x57e <strtok>
				if ((strcmp(command, "!x") == 0))
 390:	68 e7       	ldi	r22, 0x78	; 120
 392:	7c e8       	ldi	r23, 0x8C	; 140
 394:	f8 d0       	rcall	.+496    	; 0x586 <strcmp>
 396:	89 2b       	or	r24, r25
 398:	09 f0       	breq	.+2      	; 0x39c <main+0x52>
 39a:	55 c0       	rjmp	.+170    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
				{
					char *command2 = strtok(0, "?");
 39c:	66 e7       	ldi	r22, 0x76	; 118
 39e:	7c e8       	ldi	r23, 0x8C	; 140
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	ec d0       	rcall	.+472    	; 0x57e <strtok>
					sscanf(command2, "%2hhx", &tmp);
 3a6:	26 e0       	ldi	r18, 0x06	; 6
 3a8:	3e e3       	ldi	r19, 0x3E	; 62
 3aa:	3f 93       	push	r19
 3ac:	2f 93       	push	r18
 3ae:	2b e7       	ldi	r18, 0x7B	; 123
 3b0:	3c e8       	ldi	r19, 0x8C	; 140
 3b2:	3f 93       	push	r19
 3b4:	2f 93       	push	r18
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	15 d1       	rcall	.+554    	; 0x5e6 <sscanf>
					tmp = tmp-127;
 3bc:	80 91 06 3e 	lds	r24, 0x3E06	; 0x803e06 <tmp>
 3c0:	8f 57       	subi	r24, 0x7F	; 127
 3c2:	80 93 06 3e 	sts	0x3E06, r24	; 0x803e06 <tmp>
					m1Speed = Clamp(tmp,-127,127);
 3c6:	4f e7       	ldi	r20, 0x7F	; 127
 3c8:	50 e0       	ldi	r21, 0x00	; 0
 3ca:	61 e8       	ldi	r22, 0x81	; 129
 3cc:	7f ef       	ldi	r23, 0xFF	; 255
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	92 de       	rcall	.-732    	; 0xf6 <Clamp>
 3d2:	80 93 04 3e 	sts	0x3E04, r24	; 0x803e04 <m1Speed>
 3d6:	90 93 05 3e 	sts	0x3E05, r25	; 0x803e05 <m1Speed+0x1>
					m1Speed = map(m1Speed, -127, 127, -255, 255);
 3da:	60 91 04 3e 	lds	r22, 0x3E04	; 0x803e04 <m1Speed>
 3de:	70 91 05 3e 	lds	r23, 0x3E05	; 0x803e05 <m1Speed+0x1>
 3e2:	07 2e       	mov	r0, r23
 3e4:	00 0c       	add	r0, r0
 3e6:	88 0b       	sbc	r24, r24
 3e8:	99 0b       	sbc	r25, r25
 3ea:	1f 92       	push	r1
 3ec:	1f 92       	push	r1
 3ee:	1f 92       	push	r1
 3f0:	2f ef       	ldi	r18, 0xFF	; 255
 3f2:	2f 93       	push	r18
 3f4:	aa 24       	eor	r10, r10
 3f6:	a3 94       	inc	r10
 3f8:	bb 24       	eor	r11, r11
 3fa:	ba 94       	dec	r11
 3fc:	cb 2c       	mov	r12, r11
 3fe:	db 2c       	mov	r13, r11
 400:	1f e7       	ldi	r17, 0x7F	; 127
 402:	e1 2e       	mov	r14, r17
 404:	f1 2c       	mov	r15, r1
 406:	00 e0       	ldi	r16, 0x00	; 0
 408:	10 e0       	ldi	r17, 0x00	; 0
 40a:	21 e8       	ldi	r18, 0x81	; 129
 40c:	3f ef       	ldi	r19, 0xFF	; 255
 40e:	4f ef       	ldi	r20, 0xFF	; 255
 410:	5f ef       	ldi	r21, 0xFF	; 255
 412:	32 de       	rcall	.-924    	; 0x78 <map>
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	0f 90       	pop	r0
 41c:	60 93 04 3e 	sts	0x3E04, r22	; 0x803e04 <m1Speed>
 420:	70 93 05 3e 	sts	0x3E05, r23	; 0x803e05 <m1Speed+0x1>
					setMotor(0,m1Speed);
 424:	40 91 04 3e 	lds	r20, 0x3E04	; 0x803e04 <m1Speed>
 428:	50 91 05 3e 	lds	r21, 0x3E05	; 0x803e05 <m1Speed+0x1>
 42c:	05 2e       	mov	r0, r21
 42e:	00 0c       	add	r0, r0
 430:	66 0b       	sbc	r22, r22
 432:	77 0b       	sbc	r23, r23
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	85 de       	rcall	.-758    	; 0x144 <setMotor>
 43a:	0f 90       	pop	r0
 43c:	0f 90       	pop	r0
 43e:	0f 90       	pop	r0
 440:	0f 90       	pop	r0
 442:	0f 90       	pop	r0
 444:	0f 90       	pop	r0
					m2Speed = Clamp(tmp,-127,127);
					m2Speed = map(m2Speed, -127, 127, -255, 255);
					setMotor(1,m2Speed);
				}*/
			}
			done = 0;
 446:	10 92 02 3e 	sts	0x3E02, r1	; 0x803e02 <done>
 44a:	94 cf       	rjmp	.-216    	; 0x374 <main+0x2a>

0000044c <USART_init>:
 44c:	e0 e0       	ldi	r30, 0x00	; 0
 44e:	f4 e0       	ldi	r31, 0x04	; 4
 450:	82 e0       	ldi	r24, 0x02	; 2
 452:	81 83       	std	Z+1, r24	; 0x01
 454:	86 83       	std	Z+6, r24	; 0x06
 456:	84 e0       	ldi	r24, 0x04	; 4
 458:	82 83       	std	Z+2, r24	; 0x02
 45a:	82 89       	ldd	r24, Z+18	; 0x12
 45c:	87 7f       	andi	r24, 0xF7	; 247
 45e:	82 8b       	std	Z+18, r24	; 0x12
 460:	e0 e0       	ldi	r30, 0x00	; 0
 462:	f2 e0       	ldi	r31, 0x02	; 2
 464:	81 81       	ldd	r24, Z+1	; 0x01
 466:	81 60       	ori	r24, 0x01	; 1
 468:	81 83       	std	Z+1, r24	; 0x01
 46a:	e0 e0       	ldi	r30, 0x00	; 0
 46c:	f8 e0       	ldi	r31, 0x08	; 8
 46e:	86 e4       	ldi	r24, 0x46	; 70
 470:	90 e1       	ldi	r25, 0x10	; 16
 472:	80 87       	std	Z+8, r24	; 0x08
 474:	91 87       	std	Z+9, r25	; 0x09
 476:	80 e8       	ldi	r24, 0x80	; 128
 478:	85 83       	std	Z+5, r24	; 0x05
 47a:	80 ec       	ldi	r24, 0xC0	; 192
 47c:	86 83       	std	Z+6, r24	; 0x06
 47e:	83 e0       	ldi	r24, 0x03	; 3
 480:	87 83       	std	Z+7, r24	; 0x07
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	08 95       	ret

00000486 <USART_write>:
 486:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 48a:	95 ff       	sbrs	r25, 5
 48c:	fc cf       	rjmp	.-8      	; 0x486 <USART_write>
 48e:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 492:	08 95       	ret

00000494 <printString>:
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	8c 01       	movw	r16, r24
 49c:	c0 e0       	ldi	r28, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <printString+0x10>
 4a0:	f2 df       	rcall	.-28     	; 0x486 <USART_write>
 4a2:	cf 5f       	subi	r28, 0xFF	; 255
 4a4:	f8 01       	movw	r30, r16
 4a6:	ec 0f       	add	r30, r28
 4a8:	f1 1d       	adc	r31, r1
 4aa:	80 81       	ld	r24, Z
 4ac:	81 11       	cpse	r24, r1
 4ae:	f8 cf       	rjmp	.-16     	; 0x4a0 <printString+0xc>
 4b0:	cf 91       	pop	r28
 4b2:	1f 91       	pop	r17
 4b4:	0f 91       	pop	r16
 4b6:	08 95       	ret

000004b8 <__mulsi3>:
 4b8:	db 01       	movw	r26, r22
 4ba:	8f 93       	push	r24
 4bc:	9f 93       	push	r25
 4be:	27 d0       	rcall	.+78     	; 0x50e <__muluhisi3>
 4c0:	bf 91       	pop	r27
 4c2:	af 91       	pop	r26
 4c4:	a2 9f       	mul	r26, r18
 4c6:	80 0d       	add	r24, r0
 4c8:	91 1d       	adc	r25, r1
 4ca:	a3 9f       	mul	r26, r19
 4cc:	90 0d       	add	r25, r0
 4ce:	b2 9f       	mul	r27, r18
 4d0:	90 0d       	add	r25, r0
 4d2:	11 24       	eor	r1, r1
 4d4:	08 95       	ret

000004d6 <__divmodsi4>:
 4d6:	05 2e       	mov	r0, r21
 4d8:	97 fb       	bst	r25, 7
 4da:	16 f4       	brtc	.+4      	; 0x4e0 <__divmodsi4+0xa>
 4dc:	00 94       	com	r0
 4de:	0f d0       	rcall	.+30     	; 0x4fe <__negsi2>
 4e0:	57 fd       	sbrc	r21, 7
 4e2:	05 d0       	rcall	.+10     	; 0x4ee <__divmodsi4_neg2>
 4e4:	1e d0       	rcall	.+60     	; 0x522 <__udivmodsi4>
 4e6:	07 fc       	sbrc	r0, 7
 4e8:	02 d0       	rcall	.+4      	; 0x4ee <__divmodsi4_neg2>
 4ea:	46 f4       	brtc	.+16     	; 0x4fc <__divmodsi4_exit>
 4ec:	08 c0       	rjmp	.+16     	; 0x4fe <__negsi2>

000004ee <__divmodsi4_neg2>:
 4ee:	50 95       	com	r21
 4f0:	40 95       	com	r20
 4f2:	30 95       	com	r19
 4f4:	21 95       	neg	r18
 4f6:	3f 4f       	sbci	r19, 0xFF	; 255
 4f8:	4f 4f       	sbci	r20, 0xFF	; 255
 4fa:	5f 4f       	sbci	r21, 0xFF	; 255

000004fc <__divmodsi4_exit>:
 4fc:	08 95       	ret

000004fe <__negsi2>:
 4fe:	90 95       	com	r25
 500:	80 95       	com	r24
 502:	70 95       	com	r23
 504:	61 95       	neg	r22
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	8f 4f       	sbci	r24, 0xFF	; 255
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	08 95       	ret

0000050e <__muluhisi3>:
 50e:	2b d0       	rcall	.+86     	; 0x566 <__umulhisi3>
 510:	a5 9f       	mul	r26, r21
 512:	90 0d       	add	r25, r0
 514:	b4 9f       	mul	r27, r20
 516:	90 0d       	add	r25, r0
 518:	a4 9f       	mul	r26, r20
 51a:	80 0d       	add	r24, r0
 51c:	91 1d       	adc	r25, r1
 51e:	11 24       	eor	r1, r1
 520:	08 95       	ret

00000522 <__udivmodsi4>:
 522:	a1 e2       	ldi	r26, 0x21	; 33
 524:	1a 2e       	mov	r1, r26
 526:	aa 1b       	sub	r26, r26
 528:	bb 1b       	sub	r27, r27
 52a:	fd 01       	movw	r30, r26
 52c:	0d c0       	rjmp	.+26     	; 0x548 <__udivmodsi4_ep>

0000052e <__udivmodsi4_loop>:
 52e:	aa 1f       	adc	r26, r26
 530:	bb 1f       	adc	r27, r27
 532:	ee 1f       	adc	r30, r30
 534:	ff 1f       	adc	r31, r31
 536:	a2 17       	cp	r26, r18
 538:	b3 07       	cpc	r27, r19
 53a:	e4 07       	cpc	r30, r20
 53c:	f5 07       	cpc	r31, r21
 53e:	20 f0       	brcs	.+8      	; 0x548 <__udivmodsi4_ep>
 540:	a2 1b       	sub	r26, r18
 542:	b3 0b       	sbc	r27, r19
 544:	e4 0b       	sbc	r30, r20
 546:	f5 0b       	sbc	r31, r21

00000548 <__udivmodsi4_ep>:
 548:	66 1f       	adc	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	99 1f       	adc	r25, r25
 550:	1a 94       	dec	r1
 552:	69 f7       	brne	.-38     	; 0x52e <__udivmodsi4_loop>
 554:	60 95       	com	r22
 556:	70 95       	com	r23
 558:	80 95       	com	r24
 55a:	90 95       	com	r25
 55c:	9b 01       	movw	r18, r22
 55e:	ac 01       	movw	r20, r24
 560:	bd 01       	movw	r22, r26
 562:	cf 01       	movw	r24, r30
 564:	08 95       	ret

00000566 <__umulhisi3>:
 566:	a2 9f       	mul	r26, r18
 568:	b0 01       	movw	r22, r0
 56a:	b3 9f       	mul	r27, r19
 56c:	c0 01       	movw	r24, r0
 56e:	a3 9f       	mul	r26, r19
 570:	01 d0       	rcall	.+2      	; 0x574 <__umulhisi3+0xe>
 572:	b2 9f       	mul	r27, r18
 574:	70 0d       	add	r23, r0
 576:	81 1d       	adc	r24, r1
 578:	11 24       	eor	r1, r1
 57a:	91 1d       	adc	r25, r1
 57c:	08 95       	ret

0000057e <strtok>:
 57e:	40 e0       	ldi	r20, 0x00	; 0
 580:	5e e3       	ldi	r21, 0x3E	; 62
 582:	0a d0       	rcall	.+20     	; 0x598 <strtok_r>
 584:	08 95       	ret

00000586 <strcmp>:
 586:	fb 01       	movw	r30, r22
 588:	dc 01       	movw	r26, r24
 58a:	8d 91       	ld	r24, X+
 58c:	01 90       	ld	r0, Z+
 58e:	80 19       	sub	r24, r0
 590:	01 10       	cpse	r0, r1
 592:	d9 f3       	breq	.-10     	; 0x58a <strcmp+0x4>
 594:	99 0b       	sbc	r25, r25
 596:	08 95       	ret

00000598 <strtok_r>:
 598:	fa 01       	movw	r30, r20
 59a:	a1 91       	ld	r26, Z+
 59c:	b0 81       	ld	r27, Z
 59e:	00 97       	sbiw	r24, 0x00	; 0
 5a0:	19 f4       	brne	.+6      	; 0x5a8 <strtok_r+0x10>
 5a2:	10 97       	sbiw	r26, 0x00	; 0
 5a4:	e1 f0       	breq	.+56     	; 0x5de <strtok_r+0x46>
 5a6:	cd 01       	movw	r24, r26
 5a8:	dc 01       	movw	r26, r24
 5aa:	cd 01       	movw	r24, r26
 5ac:	0d 90       	ld	r0, X+
 5ae:	00 20       	and	r0, r0
 5b0:	11 f4       	brne	.+4      	; 0x5b6 <strtok_r+0x1e>
 5b2:	c0 01       	movw	r24, r0
 5b4:	13 c0       	rjmp	.+38     	; 0x5dc <strtok_r+0x44>
 5b6:	fb 01       	movw	r30, r22
 5b8:	21 91       	ld	r18, Z+
 5ba:	22 23       	and	r18, r18
 5bc:	19 f0       	breq	.+6      	; 0x5c4 <strtok_r+0x2c>
 5be:	20 15       	cp	r18, r0
 5c0:	d9 f7       	brne	.-10     	; 0x5b8 <strtok_r+0x20>
 5c2:	f3 cf       	rjmp	.-26     	; 0x5aa <strtok_r+0x12>
 5c4:	fb 01       	movw	r30, r22
 5c6:	21 91       	ld	r18, Z+
 5c8:	20 15       	cp	r18, r0
 5ca:	19 f4       	brne	.+6      	; 0x5d2 <strtok_r+0x3a>
 5cc:	1e 92       	st	-X, r1
 5ce:	11 96       	adiw	r26, 0x01	; 1
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <strtok_r+0x46>
 5d2:	22 23       	and	r18, r18
 5d4:	c1 f7       	brne	.-16     	; 0x5c6 <strtok_r+0x2e>
 5d6:	0d 90       	ld	r0, X+
 5d8:	00 20       	and	r0, r0
 5da:	a1 f7       	brne	.-24     	; 0x5c4 <strtok_r+0x2c>
 5dc:	d0 01       	movw	r26, r0
 5de:	fa 01       	movw	r30, r20
 5e0:	a1 93       	st	Z+, r26
 5e2:	b0 83       	st	Z, r27
 5e4:	08 95       	ret

000005e6 <sscanf>:
 5e6:	ae e0       	ldi	r26, 0x0E	; 14
 5e8:	b0 e0       	ldi	r27, 0x00	; 0
 5ea:	e8 ef       	ldi	r30, 0xF8	; 248
 5ec:	f2 e0       	ldi	r31, 0x02	; 2
 5ee:	1d c3       	rjmp	.+1594   	; 0xc2a <__prologue_saves__+0x20>
 5f0:	85 e0       	ldi	r24, 0x05	; 5
 5f2:	8c 83       	std	Y+4, r24	; 0x04
 5f4:	8b 89       	ldd	r24, Y+19	; 0x13
 5f6:	9c 89       	ldd	r25, Y+20	; 0x14
 5f8:	89 83       	std	Y+1, r24	; 0x01
 5fa:	9a 83       	std	Y+2, r25	; 0x02
 5fc:	ae 01       	movw	r20, r28
 5fe:	49 5e       	subi	r20, 0xE9	; 233
 600:	5f 4f       	sbci	r21, 0xFF	; 255
 602:	6d 89       	ldd	r22, Y+21	; 0x15
 604:	7e 89       	ldd	r23, Y+22	; 0x16
 606:	ce 01       	movw	r24, r28
 608:	01 96       	adiw	r24, 0x01	; 1
 60a:	90 d1       	rcall	.+800    	; 0x92c <vfscanf>
 60c:	2e 96       	adiw	r28, 0x0e	; 14
 60e:	e2 e0       	ldi	r30, 0x02	; 2
 610:	25 c3       	rjmp	.+1610   	; 0xc5c <__epilogue_restores__+0x20>

00000612 <putval>:
 612:	20 fd       	sbrc	r18, 0
 614:	09 c0       	rjmp	.+18     	; 0x628 <putval+0x16>
 616:	fc 01       	movw	r30, r24
 618:	23 fd       	sbrc	r18, 3
 61a:	05 c0       	rjmp	.+10     	; 0x626 <putval+0x14>
 61c:	22 ff       	sbrs	r18, 2
 61e:	02 c0       	rjmp	.+4      	; 0x624 <putval+0x12>
 620:	73 83       	std	Z+3, r23	; 0x03
 622:	62 83       	std	Z+2, r22	; 0x02
 624:	51 83       	std	Z+1, r21	; 0x01
 626:	40 83       	st	Z, r20
 628:	08 95       	ret

0000062a <mulacc>:
 62a:	44 fd       	sbrc	r20, 4
 62c:	17 c0       	rjmp	.+46     	; 0x65c <mulacc+0x32>
 62e:	46 fd       	sbrc	r20, 6
 630:	17 c0       	rjmp	.+46     	; 0x660 <mulacc+0x36>
 632:	ab 01       	movw	r20, r22
 634:	bc 01       	movw	r22, r24
 636:	da 01       	movw	r26, r20
 638:	fb 01       	movw	r30, r22
 63a:	aa 0f       	add	r26, r26
 63c:	bb 1f       	adc	r27, r27
 63e:	ee 1f       	adc	r30, r30
 640:	ff 1f       	adc	r31, r31
 642:	10 94       	com	r1
 644:	d1 f7       	brne	.-12     	; 0x63a <mulacc+0x10>
 646:	4a 0f       	add	r20, r26
 648:	5b 1f       	adc	r21, r27
 64a:	6e 1f       	adc	r22, r30
 64c:	7f 1f       	adc	r23, r31
 64e:	cb 01       	movw	r24, r22
 650:	ba 01       	movw	r22, r20
 652:	66 0f       	add	r22, r22
 654:	77 1f       	adc	r23, r23
 656:	88 1f       	adc	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	09 c0       	rjmp	.+18     	; 0x66e <mulacc+0x44>
 65c:	33 e0       	ldi	r19, 0x03	; 3
 65e:	01 c0       	rjmp	.+2      	; 0x662 <mulacc+0x38>
 660:	34 e0       	ldi	r19, 0x04	; 4
 662:	66 0f       	add	r22, r22
 664:	77 1f       	adc	r23, r23
 666:	88 1f       	adc	r24, r24
 668:	99 1f       	adc	r25, r25
 66a:	31 50       	subi	r19, 0x01	; 1
 66c:	d1 f7       	brne	.-12     	; 0x662 <mulacc+0x38>
 66e:	62 0f       	add	r22, r18
 670:	71 1d       	adc	r23, r1
 672:	81 1d       	adc	r24, r1
 674:	91 1d       	adc	r25, r1
 676:	08 95       	ret

00000678 <skip_spaces>:
 678:	0f 93       	push	r16
 67a:	1f 93       	push	r17
 67c:	cf 93       	push	r28
 67e:	df 93       	push	r29
 680:	8c 01       	movw	r16, r24
 682:	c8 01       	movw	r24, r16
 684:	68 d2       	rcall	.+1232   	; 0xb56 <fgetc>
 686:	ec 01       	movw	r28, r24
 688:	97 fd       	sbrc	r25, 7
 68a:	06 c0       	rjmp	.+12     	; 0x698 <skip_spaces+0x20>
 68c:	50 d2       	rcall	.+1184   	; 0xb2e <isspace>
 68e:	89 2b       	or	r24, r25
 690:	c1 f7       	brne	.-16     	; 0x682 <skip_spaces+0xa>
 692:	b8 01       	movw	r22, r16
 694:	ce 01       	movw	r24, r28
 696:	9d d2       	rcall	.+1338   	; 0xbd2 <ungetc>
 698:	ce 01       	movw	r24, r28
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	1f 91       	pop	r17
 6a0:	0f 91       	pop	r16
 6a2:	08 95       	ret

000006a4 <conv_int>:
 6a4:	8f 92       	push	r8
 6a6:	9f 92       	push	r9
 6a8:	af 92       	push	r10
 6aa:	bf 92       	push	r11
 6ac:	ef 92       	push	r14
 6ae:	ff 92       	push	r15
 6b0:	0f 93       	push	r16
 6b2:	1f 93       	push	r17
 6b4:	cf 93       	push	r28
 6b6:	df 93       	push	r29
 6b8:	8c 01       	movw	r16, r24
 6ba:	d6 2f       	mov	r29, r22
 6bc:	7a 01       	movw	r14, r20
 6be:	b2 2e       	mov	r11, r18
 6c0:	4a d2       	rcall	.+1172   	; 0xb56 <fgetc>
 6c2:	9c 01       	movw	r18, r24
 6c4:	33 27       	eor	r19, r19
 6c6:	2b 32       	cpi	r18, 0x2B	; 43
 6c8:	31 05       	cpc	r19, r1
 6ca:	31 f0       	breq	.+12     	; 0x6d8 <conv_int+0x34>
 6cc:	2d 32       	cpi	r18, 0x2D	; 45
 6ce:	31 05       	cpc	r19, r1
 6d0:	59 f4       	brne	.+22     	; 0x6e8 <conv_int+0x44>
 6d2:	8b 2d       	mov	r24, r11
 6d4:	80 68       	ori	r24, 0x80	; 128
 6d6:	b8 2e       	mov	r11, r24
 6d8:	d1 50       	subi	r29, 0x01	; 1
 6da:	11 f4       	brne	.+4      	; 0x6e0 <conv_int+0x3c>
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	61 c0       	rjmp	.+194    	; 0x7a2 <conv_int+0xfe>
 6e0:	c8 01       	movw	r24, r16
 6e2:	39 d2       	rcall	.+1138   	; 0xb56 <fgetc>
 6e4:	97 fd       	sbrc	r25, 7
 6e6:	fa cf       	rjmp	.-12     	; 0x6dc <conv_int+0x38>
 6e8:	cb 2d       	mov	r28, r11
 6ea:	cd 7f       	andi	r28, 0xFD	; 253
 6ec:	2b 2d       	mov	r18, r11
 6ee:	20 73       	andi	r18, 0x30	; 48
 6f0:	f9 f4       	brne	.+62     	; 0x730 <conv_int+0x8c>
 6f2:	80 33       	cpi	r24, 0x30	; 48
 6f4:	e9 f4       	brne	.+58     	; 0x730 <conv_int+0x8c>
 6f6:	aa 24       	eor	r10, r10
 6f8:	aa 94       	dec	r10
 6fa:	ad 0e       	add	r10, r29
 6fc:	09 f4       	brne	.+2      	; 0x700 <conv_int+0x5c>
 6fe:	3e c0       	rjmp	.+124    	; 0x77c <conv_int+0xd8>
 700:	c8 01       	movw	r24, r16
 702:	29 d2       	rcall	.+1106   	; 0xb56 <fgetc>
 704:	97 fd       	sbrc	r25, 7
 706:	3a c0       	rjmp	.+116    	; 0x77c <conv_int+0xd8>
 708:	9c 01       	movw	r18, r24
 70a:	2f 7d       	andi	r18, 0xDF	; 223
 70c:	33 27       	eor	r19, r19
 70e:	28 35       	cpi	r18, 0x58	; 88
 710:	31 05       	cpc	r19, r1
 712:	41 f4       	brne	.+16     	; 0x724 <conv_int+0x80>
 714:	c2 64       	ori	r28, 0x42	; 66
 716:	d2 50       	subi	r29, 0x02	; 2
 718:	89 f1       	breq	.+98     	; 0x77c <conv_int+0xd8>
 71a:	c8 01       	movw	r24, r16
 71c:	1c d2       	rcall	.+1080   	; 0xb56 <fgetc>
 71e:	97 ff       	sbrs	r25, 7
 720:	07 c0       	rjmp	.+14     	; 0x730 <conv_int+0x8c>
 722:	2c c0       	rjmp	.+88     	; 0x77c <conv_int+0xd8>
 724:	b6 fe       	sbrs	r11, 6
 726:	02 c0       	rjmp	.+4      	; 0x72c <conv_int+0x88>
 728:	c2 60       	ori	r28, 0x02	; 2
 72a:	01 c0       	rjmp	.+2      	; 0x72e <conv_int+0x8a>
 72c:	c2 61       	ori	r28, 0x12	; 18
 72e:	da 2d       	mov	r29, r10
 730:	81 2c       	mov	r8, r1
 732:	91 2c       	mov	r9, r1
 734:	54 01       	movw	r10, r8
 736:	20 ed       	ldi	r18, 0xD0	; 208
 738:	28 0f       	add	r18, r24
 73a:	28 30       	cpi	r18, 0x08	; 8
 73c:	78 f0       	brcs	.+30     	; 0x75c <conv_int+0xb8>
 73e:	c4 ff       	sbrs	r28, 4
 740:	03 c0       	rjmp	.+6      	; 0x748 <conv_int+0xa4>
 742:	b8 01       	movw	r22, r16
 744:	46 d2       	rcall	.+1164   	; 0xbd2 <ungetc>
 746:	17 c0       	rjmp	.+46     	; 0x776 <conv_int+0xd2>
 748:	2a 30       	cpi	r18, 0x0A	; 10
 74a:	40 f0       	brcs	.+16     	; 0x75c <conv_int+0xb8>
 74c:	c6 ff       	sbrs	r28, 6
 74e:	f9 cf       	rjmp	.-14     	; 0x742 <conv_int+0x9e>
 750:	2f 7d       	andi	r18, 0xDF	; 223
 752:	3f ee       	ldi	r19, 0xEF	; 239
 754:	32 0f       	add	r19, r18
 756:	36 30       	cpi	r19, 0x06	; 6
 758:	a0 f7       	brcc	.-24     	; 0x742 <conv_int+0x9e>
 75a:	27 50       	subi	r18, 0x07	; 7
 75c:	4c 2f       	mov	r20, r28
 75e:	c5 01       	movw	r24, r10
 760:	b4 01       	movw	r22, r8
 762:	63 df       	rcall	.-314    	; 0x62a <mulacc>
 764:	4b 01       	movw	r8, r22
 766:	5c 01       	movw	r10, r24
 768:	c2 60       	ori	r28, 0x02	; 2
 76a:	d1 50       	subi	r29, 0x01	; 1
 76c:	51 f0       	breq	.+20     	; 0x782 <conv_int+0xde>
 76e:	c8 01       	movw	r24, r16
 770:	f2 d1       	rcall	.+996    	; 0xb56 <fgetc>
 772:	97 ff       	sbrs	r25, 7
 774:	e0 cf       	rjmp	.-64     	; 0x736 <conv_int+0x92>
 776:	c1 fd       	sbrc	r28, 1
 778:	04 c0       	rjmp	.+8      	; 0x782 <conv_int+0xde>
 77a:	b0 cf       	rjmp	.-160    	; 0x6dc <conv_int+0x38>
 77c:	81 2c       	mov	r8, r1
 77e:	91 2c       	mov	r9, r1
 780:	54 01       	movw	r10, r8
 782:	c7 ff       	sbrs	r28, 7
 784:	08 c0       	rjmp	.+16     	; 0x796 <conv_int+0xf2>
 786:	b0 94       	com	r11
 788:	a0 94       	com	r10
 78a:	90 94       	com	r9
 78c:	80 94       	com	r8
 78e:	81 1c       	adc	r8, r1
 790:	91 1c       	adc	r9, r1
 792:	a1 1c       	adc	r10, r1
 794:	b1 1c       	adc	r11, r1
 796:	2c 2f       	mov	r18, r28
 798:	b5 01       	movw	r22, r10
 79a:	a4 01       	movw	r20, r8
 79c:	c7 01       	movw	r24, r14
 79e:	39 df       	rcall	.-398    	; 0x612 <putval>
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	df 91       	pop	r29
 7a4:	cf 91       	pop	r28
 7a6:	1f 91       	pop	r17
 7a8:	0f 91       	pop	r16
 7aa:	ff 90       	pop	r15
 7ac:	ef 90       	pop	r14
 7ae:	bf 90       	pop	r11
 7b0:	af 90       	pop	r10
 7b2:	9f 90       	pop	r9
 7b4:	8f 90       	pop	r8
 7b6:	08 95       	ret

000007b8 <conv_brk>:
 7b8:	a0 e2       	ldi	r26, 0x20	; 32
 7ba:	b0 e0       	ldi	r27, 0x00	; 0
 7bc:	e1 ee       	ldi	r30, 0xE1	; 225
 7be:	f3 e0       	ldi	r31, 0x03	; 3
 7c0:	27 c2       	rjmp	.+1102   	; 0xc10 <__prologue_saves__+0x6>
 7c2:	5c 01       	movw	r10, r24
 7c4:	96 2e       	mov	r9, r22
 7c6:	7a 01       	movw	r14, r20
 7c8:	f9 01       	movw	r30, r18
 7ca:	8e 01       	movw	r16, r28
 7cc:	0f 5f       	subi	r16, 0xFF	; 255
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	68 01       	movw	r12, r16
 7d2:	80 e2       	ldi	r24, 0x20	; 32
 7d4:	d8 01       	movw	r26, r16
 7d6:	1d 92       	st	X+, r1
 7d8:	8a 95       	dec	r24
 7da:	e9 f7       	brne	.-6      	; 0x7d6 <conv_brk+0x1e>
 7dc:	d5 01       	movw	r26, r10
 7de:	13 96       	adiw	r26, 0x03	; 3
 7e0:	8c 90       	ld	r8, X
 7e2:	80 e0       	ldi	r24, 0x00	; 0
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	61 2c       	mov	r6, r1
 7e8:	71 2c       	mov	r7, r1
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	61 e0       	ldi	r22, 0x01	; 1
 7ee:	70 e0       	ldi	r23, 0x00	; 0
 7f0:	83 fc       	sbrc	r8, 3
 7f2:	25 91       	lpm	r18, Z+
 7f4:	83 fe       	sbrs	r8, 3
 7f6:	21 91       	ld	r18, Z+
 7f8:	8f 01       	movw	r16, r30
 7fa:	52 2e       	mov	r5, r18
 7fc:	21 11       	cpse	r18, r1
 7fe:	03 c0       	rjmp	.+6      	; 0x806 <conv_brk+0x4e>
 800:	80 e0       	ldi	r24, 0x00	; 0
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	90 c0       	rjmp	.+288    	; 0x926 <conv_brk+0x16e>
 806:	2e 35       	cpi	r18, 0x5E	; 94
 808:	11 f4       	brne	.+4      	; 0x80e <conv_brk+0x56>
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	51 f1       	breq	.+84     	; 0x862 <conv_brk+0xaa>
 80e:	43 2f       	mov	r20, r19
 810:	50 e0       	ldi	r21, 0x00	; 0
 812:	48 17       	cp	r20, r24
 814:	59 07       	cpc	r21, r25
 816:	3c f4       	brge	.+14     	; 0x826 <conv_brk+0x6e>
 818:	2d 35       	cpi	r18, 0x5D	; 93
 81a:	59 f1       	breq	.+86     	; 0x872 <conv_brk+0xba>
 81c:	2d 32       	cpi	r18, 0x2D	; 45
 81e:	19 f4       	brne	.+6      	; 0x826 <conv_brk+0x6e>
 820:	77 20       	and	r7, r7
 822:	09 f1       	breq	.+66     	; 0x866 <conv_brk+0xae>
 824:	03 c0       	rjmp	.+6      	; 0x82c <conv_brk+0x74>
 826:	77 20       	and	r7, r7
 828:	09 f4       	brne	.+2      	; 0x82c <conv_brk+0x74>
 82a:	68 c0       	rjmp	.+208    	; 0x8fc <conv_brk+0x144>
 82c:	45 2d       	mov	r20, r5
 82e:	46 95       	lsr	r20
 830:	46 95       	lsr	r20
 832:	46 95       	lsr	r20
 834:	d6 01       	movw	r26, r12
 836:	a4 0f       	add	r26, r20
 838:	b1 1d       	adc	r27, r1
 83a:	45 2d       	mov	r20, r5
 83c:	47 70       	andi	r20, 0x07	; 7
 83e:	8b 01       	movw	r16, r22
 840:	02 c0       	rjmp	.+4      	; 0x846 <conv_brk+0x8e>
 842:	00 0f       	add	r16, r16
 844:	11 1f       	adc	r17, r17
 846:	4a 95       	dec	r20
 848:	e2 f7       	brpl	.-8      	; 0x842 <conv_brk+0x8a>
 84a:	a8 01       	movw	r20, r16
 84c:	5c 91       	ld	r21, X
 84e:	45 2b       	or	r20, r21
 850:	4c 93       	st	X, r20
 852:	65 14       	cp	r6, r5
 854:	59 f0       	breq	.+22     	; 0x86c <conv_brk+0xb4>
 856:	56 14       	cp	r5, r6
 858:	10 f4       	brcc	.+4      	; 0x85e <conv_brk+0xa6>
 85a:	53 94       	inc	r5
 85c:	e7 cf       	rjmp	.-50     	; 0x82c <conv_brk+0x74>
 85e:	5a 94       	dec	r5
 860:	e5 cf       	rjmp	.-54     	; 0x82c <conv_brk+0x74>
 862:	31 e0       	ldi	r19, 0x01	; 1
 864:	04 c0       	rjmp	.+8      	; 0x86e <conv_brk+0xb6>
 866:	77 24       	eor	r7, r7
 868:	73 94       	inc	r7
 86a:	01 c0       	rjmp	.+2      	; 0x86e <conv_brk+0xb6>
 86c:	71 2c       	mov	r7, r1
 86e:	01 96       	adiw	r24, 0x01	; 1
 870:	bf cf       	rjmp	.-130    	; 0x7f0 <conv_brk+0x38>
 872:	77 20       	and	r7, r7
 874:	19 f0       	breq	.+6      	; 0x87c <conv_brk+0xc4>
 876:	8e 81       	ldd	r24, Y+6	; 0x06
 878:	80 62       	ori	r24, 0x20	; 32
 87a:	8e 83       	std	Y+6, r24	; 0x06
 87c:	31 11       	cpse	r19, r1
 87e:	03 c0       	rjmp	.+6      	; 0x886 <conv_brk+0xce>
 880:	88 24       	eor	r8, r8
 882:	83 94       	inc	r8
 884:	17 c0       	rjmp	.+46     	; 0x8b4 <conv_brk+0xfc>
 886:	f6 01       	movw	r30, r12
 888:	9e 01       	movw	r18, r28
 88a:	2f 5d       	subi	r18, 0xDF	; 223
 88c:	3f 4f       	sbci	r19, 0xFF	; 255
 88e:	80 81       	ld	r24, Z
 890:	80 95       	com	r24
 892:	81 93       	st	Z+, r24
 894:	2e 17       	cp	r18, r30
 896:	3f 07       	cpc	r19, r31
 898:	d1 f7       	brne	.-12     	; 0x88e <conv_brk+0xd6>
 89a:	f2 cf       	rjmp	.-28     	; 0x880 <conv_brk+0xc8>
 89c:	e1 14       	cp	r14, r1
 89e:	f1 04       	cpc	r15, r1
 8a0:	29 f0       	breq	.+10     	; 0x8ac <conv_brk+0xf4>
 8a2:	d7 01       	movw	r26, r14
 8a4:	8c 93       	st	X, r24
 8a6:	f7 01       	movw	r30, r14
 8a8:	31 96       	adiw	r30, 0x01	; 1
 8aa:	7f 01       	movw	r14, r30
 8ac:	9a 94       	dec	r9
 8ae:	81 2c       	mov	r8, r1
 8b0:	99 20       	and	r9, r9
 8b2:	e9 f0       	breq	.+58     	; 0x8ee <conv_brk+0x136>
 8b4:	c5 01       	movw	r24, r10
 8b6:	4f d1       	rcall	.+670    	; 0xb56 <fgetc>
 8b8:	97 fd       	sbrc	r25, 7
 8ba:	17 c0       	rjmp	.+46     	; 0x8ea <conv_brk+0x132>
 8bc:	fc 01       	movw	r30, r24
 8be:	ff 27       	eor	r31, r31
 8c0:	23 e0       	ldi	r18, 0x03	; 3
 8c2:	f5 95       	asr	r31
 8c4:	e7 95       	ror	r30
 8c6:	2a 95       	dec	r18
 8c8:	e1 f7       	brne	.-8      	; 0x8c2 <conv_brk+0x10a>
 8ca:	ec 0d       	add	r30, r12
 8cc:	fd 1d       	adc	r31, r13
 8ce:	20 81       	ld	r18, Z
 8d0:	30 e0       	ldi	r19, 0x00	; 0
 8d2:	ac 01       	movw	r20, r24
 8d4:	47 70       	andi	r20, 0x07	; 7
 8d6:	55 27       	eor	r21, r21
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <conv_brk+0x126>
 8da:	35 95       	asr	r19
 8dc:	27 95       	ror	r18
 8de:	4a 95       	dec	r20
 8e0:	e2 f7       	brpl	.-8      	; 0x8da <conv_brk+0x122>
 8e2:	20 fd       	sbrc	r18, 0
 8e4:	db cf       	rjmp	.-74     	; 0x89c <conv_brk+0xe4>
 8e6:	b5 01       	movw	r22, r10
 8e8:	74 d1       	rcall	.+744    	; 0xbd2 <ungetc>
 8ea:	81 10       	cpse	r8, r1
 8ec:	89 cf       	rjmp	.-238    	; 0x800 <conv_brk+0x48>
 8ee:	e1 14       	cp	r14, r1
 8f0:	f1 04       	cpc	r15, r1
 8f2:	11 f0       	breq	.+4      	; 0x8f8 <conv_brk+0x140>
 8f4:	d7 01       	movw	r26, r14
 8f6:	1c 92       	st	X, r1
 8f8:	c8 01       	movw	r24, r16
 8fa:	15 c0       	rjmp	.+42     	; 0x926 <conv_brk+0x16e>
 8fc:	42 2f       	mov	r20, r18
 8fe:	46 95       	lsr	r20
 900:	46 95       	lsr	r20
 902:	46 95       	lsr	r20
 904:	d6 01       	movw	r26, r12
 906:	a4 0f       	add	r26, r20
 908:	b1 1d       	adc	r27, r1
 90a:	42 2f       	mov	r20, r18
 90c:	47 70       	andi	r20, 0x07	; 7
 90e:	8b 01       	movw	r16, r22
 910:	02 c0       	rjmp	.+4      	; 0x916 <conv_brk+0x15e>
 912:	00 0f       	add	r16, r16
 914:	11 1f       	adc	r17, r17
 916:	4a 95       	dec	r20
 918:	e2 f7       	brpl	.-8      	; 0x912 <conv_brk+0x15a>
 91a:	a8 01       	movw	r20, r16
 91c:	5c 91       	ld	r21, X
 91e:	45 2b       	or	r20, r21
 920:	4c 93       	st	X, r20
 922:	62 2e       	mov	r6, r18
 924:	a4 cf       	rjmp	.-184    	; 0x86e <conv_brk+0xb6>
 926:	a0 96       	adiw	r28, 0x20	; 32
 928:	ef e0       	ldi	r30, 0x0F	; 15
 92a:	8b c1       	rjmp	.+790    	; 0xc42 <__epilogue_restores__+0x6>

0000092c <vfscanf>:
 92c:	a0 e0       	ldi	r26, 0x00	; 0
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	eb e9       	ldi	r30, 0x9B	; 155
 932:	f4 e0       	ldi	r31, 0x04	; 4
 934:	6d c1       	rjmp	.+730    	; 0xc10 <__prologue_saves__+0x6>
 936:	6c 01       	movw	r12, r24
 938:	eb 01       	movw	r28, r22
 93a:	5a 01       	movw	r10, r20
 93c:	fc 01       	movw	r30, r24
 93e:	16 82       	std	Z+6, r1	; 0x06
 940:	17 82       	std	Z+7, r1	; 0x07
 942:	51 2c       	mov	r5, r1
 944:	f6 01       	movw	r30, r12
 946:	e3 80       	ldd	r14, Z+3	; 0x03
 948:	fe 01       	movw	r30, r28
 94a:	e3 fc       	sbrc	r14, 3
 94c:	85 91       	lpm	r24, Z+
 94e:	e3 fe       	sbrs	r14, 3
 950:	81 91       	ld	r24, Z+
 952:	18 2f       	mov	r17, r24
 954:	ef 01       	movw	r28, r30
 956:	88 23       	and	r24, r24
 958:	09 f4       	brne	.+2      	; 0x95c <vfscanf+0x30>
 95a:	e0 c0       	rjmp	.+448    	; 0xb1c <vfscanf+0x1f0>
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	e7 d0       	rcall	.+462    	; 0xb2e <isspace>
 960:	89 2b       	or	r24, r25
 962:	19 f0       	breq	.+6      	; 0x96a <vfscanf+0x3e>
 964:	c6 01       	movw	r24, r12
 966:	88 de       	rcall	.-752    	; 0x678 <skip_spaces>
 968:	ed cf       	rjmp	.-38     	; 0x944 <vfscanf+0x18>
 96a:	15 32       	cpi	r17, 0x25	; 37
 96c:	41 f4       	brne	.+16     	; 0x97e <vfscanf+0x52>
 96e:	fe 01       	movw	r30, r28
 970:	e3 fc       	sbrc	r14, 3
 972:	15 91       	lpm	r17, Z+
 974:	e3 fe       	sbrs	r14, 3
 976:	11 91       	ld	r17, Z+
 978:	ef 01       	movw	r28, r30
 97a:	15 32       	cpi	r17, 0x25	; 37
 97c:	71 f4       	brne	.+28     	; 0x99a <vfscanf+0x6e>
 97e:	c6 01       	movw	r24, r12
 980:	ea d0       	rcall	.+468    	; 0xb56 <fgetc>
 982:	97 fd       	sbrc	r25, 7
 984:	c9 c0       	rjmp	.+402    	; 0xb18 <vfscanf+0x1ec>
 986:	41 2f       	mov	r20, r17
 988:	50 e0       	ldi	r21, 0x00	; 0
 98a:	9c 01       	movw	r18, r24
 98c:	33 27       	eor	r19, r19
 98e:	24 17       	cp	r18, r20
 990:	35 07       	cpc	r19, r21
 992:	c1 f2       	breq	.-80     	; 0x944 <vfscanf+0x18>
 994:	b6 01       	movw	r22, r12
 996:	1d d1       	rcall	.+570    	; 0xbd2 <ungetc>
 998:	c1 c0       	rjmp	.+386    	; 0xb1c <vfscanf+0x1f0>
 99a:	1a 32       	cpi	r17, 0x2A	; 42
 99c:	39 f4       	brne	.+14     	; 0x9ac <vfscanf+0x80>
 99e:	e3 fc       	sbrc	r14, 3
 9a0:	15 91       	lpm	r17, Z+
 9a2:	e3 fe       	sbrs	r14, 3
 9a4:	11 91       	ld	r17, Z+
 9a6:	ef 01       	movw	r28, r30
 9a8:	01 e0       	ldi	r16, 0x01	; 1
 9aa:	01 c0       	rjmp	.+2      	; 0x9ae <vfscanf+0x82>
 9ac:	00 e0       	ldi	r16, 0x00	; 0
 9ae:	f1 2c       	mov	r15, r1
 9b0:	20 ed       	ldi	r18, 0xD0	; 208
 9b2:	21 0f       	add	r18, r17
 9b4:	2a 30       	cpi	r18, 0x0A	; 10
 9b6:	78 f4       	brcc	.+30     	; 0x9d6 <vfscanf+0xaa>
 9b8:	02 60       	ori	r16, 0x02	; 2
 9ba:	6f 2d       	mov	r22, r15
 9bc:	70 e0       	ldi	r23, 0x00	; 0
 9be:	80 e0       	ldi	r24, 0x00	; 0
 9c0:	90 e0       	ldi	r25, 0x00	; 0
 9c2:	40 e2       	ldi	r20, 0x20	; 32
 9c4:	32 de       	rcall	.-924    	; 0x62a <mulacc>
 9c6:	f6 2e       	mov	r15, r22
 9c8:	fe 01       	movw	r30, r28
 9ca:	e3 fc       	sbrc	r14, 3
 9cc:	15 91       	lpm	r17, Z+
 9ce:	e3 fe       	sbrs	r14, 3
 9d0:	11 91       	ld	r17, Z+
 9d2:	ef 01       	movw	r28, r30
 9d4:	ed cf       	rjmp	.-38     	; 0x9b0 <vfscanf+0x84>
 9d6:	01 ff       	sbrs	r16, 1
 9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <vfscanf+0xb4>
 9da:	f1 10       	cpse	r15, r1
 9dc:	03 c0       	rjmp	.+6      	; 0x9e4 <vfscanf+0xb8>
 9de:	9e c0       	rjmp	.+316    	; 0xb1c <vfscanf+0x1f0>
 9e0:	ff 24       	eor	r15, r15
 9e2:	fa 94       	dec	r15
 9e4:	18 36       	cpi	r17, 0x68	; 104
 9e6:	19 f0       	breq	.+6      	; 0x9ee <vfscanf+0xc2>
 9e8:	1c 36       	cpi	r17, 0x6C	; 108
 9ea:	51 f0       	breq	.+20     	; 0xa00 <vfscanf+0xd4>
 9ec:	10 c0       	rjmp	.+32     	; 0xa0e <vfscanf+0xe2>
 9ee:	fe 01       	movw	r30, r28
 9f0:	e3 fc       	sbrc	r14, 3
 9f2:	15 91       	lpm	r17, Z+
 9f4:	e3 fe       	sbrs	r14, 3
 9f6:	11 91       	ld	r17, Z+
 9f8:	ef 01       	movw	r28, r30
 9fa:	18 36       	cpi	r17, 0x68	; 104
 9fc:	41 f4       	brne	.+16     	; 0xa0e <vfscanf+0xe2>
 9fe:	08 60       	ori	r16, 0x08	; 8
 a00:	04 60       	ori	r16, 0x04	; 4
 a02:	fe 01       	movw	r30, r28
 a04:	e3 fc       	sbrc	r14, 3
 a06:	15 91       	lpm	r17, Z+
 a08:	e3 fe       	sbrs	r14, 3
 a0a:	11 91       	ld	r17, Z+
 a0c:	ef 01       	movw	r28, r30
 a0e:	11 23       	and	r17, r17
 a10:	09 f4       	brne	.+2      	; 0xa14 <vfscanf+0xe8>
 a12:	84 c0       	rjmp	.+264    	; 0xb1c <vfscanf+0x1f0>
 a14:	61 2f       	mov	r22, r17
 a16:	70 e0       	ldi	r23, 0x00	; 0
 a18:	84 e3       	ldi	r24, 0x34	; 52
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	91 d0       	rcall	.+290    	; 0xb40 <strchr_P>
 a1e:	89 2b       	or	r24, r25
 a20:	09 f4       	brne	.+2      	; 0xa24 <vfscanf+0xf8>
 a22:	7c c0       	rjmp	.+248    	; 0xb1c <vfscanf+0x1f0>
 a24:	00 fd       	sbrc	r16, 0
 a26:	07 c0       	rjmp	.+14     	; 0xa36 <vfscanf+0x10a>
 a28:	f5 01       	movw	r30, r10
 a2a:	80 80       	ld	r8, Z
 a2c:	91 80       	ldd	r9, Z+1	; 0x01
 a2e:	c5 01       	movw	r24, r10
 a30:	02 96       	adiw	r24, 0x02	; 2
 a32:	5c 01       	movw	r10, r24
 a34:	02 c0       	rjmp	.+4      	; 0xa3a <vfscanf+0x10e>
 a36:	81 2c       	mov	r8, r1
 a38:	91 2c       	mov	r9, r1
 a3a:	1e 36       	cpi	r17, 0x6E	; 110
 a3c:	49 f4       	brne	.+18     	; 0xa50 <vfscanf+0x124>
 a3e:	f6 01       	movw	r30, r12
 a40:	46 81       	ldd	r20, Z+6	; 0x06
 a42:	57 81       	ldd	r21, Z+7	; 0x07
 a44:	60 e0       	ldi	r22, 0x00	; 0
 a46:	70 e0       	ldi	r23, 0x00	; 0
 a48:	20 2f       	mov	r18, r16
 a4a:	c4 01       	movw	r24, r8
 a4c:	e2 dd       	rcall	.-1084   	; 0x612 <putval>
 a4e:	7a cf       	rjmp	.-268    	; 0x944 <vfscanf+0x18>
 a50:	13 36       	cpi	r17, 0x63	; 99
 a52:	a1 f4       	brne	.+40     	; 0xa7c <vfscanf+0x150>
 a54:	01 fd       	sbrc	r16, 1
 a56:	02 c0       	rjmp	.+4      	; 0xa5c <vfscanf+0x130>
 a58:	ff 24       	eor	r15, r15
 a5a:	f3 94       	inc	r15
 a5c:	c6 01       	movw	r24, r12
 a5e:	7b d0       	rcall	.+246    	; 0xb56 <fgetc>
 a60:	97 fd       	sbrc	r25, 7
 a62:	5a c0       	rjmp	.+180    	; 0xb18 <vfscanf+0x1ec>
 a64:	81 14       	cp	r8, r1
 a66:	91 04       	cpc	r9, r1
 a68:	29 f0       	breq	.+10     	; 0xa74 <vfscanf+0x148>
 a6a:	f4 01       	movw	r30, r8
 a6c:	80 83       	st	Z, r24
 a6e:	c4 01       	movw	r24, r8
 a70:	01 96       	adiw	r24, 0x01	; 1
 a72:	4c 01       	movw	r8, r24
 a74:	fa 94       	dec	r15
 a76:	f1 10       	cpse	r15, r1
 a78:	f1 cf       	rjmp	.-30     	; 0xa5c <vfscanf+0x130>
 a7a:	4a c0       	rjmp	.+148    	; 0xb10 <vfscanf+0x1e4>
 a7c:	1b 35       	cpi	r17, 0x5B	; 91
 a7e:	51 f4       	brne	.+20     	; 0xa94 <vfscanf+0x168>
 a80:	9e 01       	movw	r18, r28
 a82:	a4 01       	movw	r20, r8
 a84:	6f 2d       	mov	r22, r15
 a86:	c6 01       	movw	r24, r12
 a88:	97 de       	rcall	.-722    	; 0x7b8 <conv_brk>
 a8a:	ec 01       	movw	r28, r24
 a8c:	89 2b       	or	r24, r25
 a8e:	09 f0       	breq	.+2      	; 0xa92 <vfscanf+0x166>
 a90:	3f c0       	rjmp	.+126    	; 0xb10 <vfscanf+0x1e4>
 a92:	39 c0       	rjmp	.+114    	; 0xb06 <vfscanf+0x1da>
 a94:	c6 01       	movw	r24, r12
 a96:	f0 dd       	rcall	.-1056   	; 0x678 <skip_spaces>
 a98:	97 fd       	sbrc	r25, 7
 a9a:	3e c0       	rjmp	.+124    	; 0xb18 <vfscanf+0x1ec>
 a9c:	1f 36       	cpi	r17, 0x6F	; 111
 a9e:	49 f1       	breq	.+82     	; 0xaf2 <vfscanf+0x1c6>
 aa0:	28 f4       	brcc	.+10     	; 0xaac <vfscanf+0x180>
 aa2:	14 36       	cpi	r17, 0x64	; 100
 aa4:	21 f1       	breq	.+72     	; 0xaee <vfscanf+0x1c2>
 aa6:	19 36       	cpi	r17, 0x69	; 105
 aa8:	39 f1       	breq	.+78     	; 0xaf8 <vfscanf+0x1cc>
 aaa:	25 c0       	rjmp	.+74     	; 0xaf6 <vfscanf+0x1ca>
 aac:	13 37       	cpi	r17, 0x73	; 115
 aae:	71 f0       	breq	.+28     	; 0xacc <vfscanf+0x1a0>
 ab0:	15 37       	cpi	r17, 0x75	; 117
 ab2:	e9 f0       	breq	.+58     	; 0xaee <vfscanf+0x1c2>
 ab4:	20 c0       	rjmp	.+64     	; 0xaf6 <vfscanf+0x1ca>
 ab6:	81 14       	cp	r8, r1
 ab8:	91 04       	cpc	r9, r1
 aba:	29 f0       	breq	.+10     	; 0xac6 <vfscanf+0x19a>
 abc:	f4 01       	movw	r30, r8
 abe:	60 82       	st	Z, r6
 ac0:	c4 01       	movw	r24, r8
 ac2:	01 96       	adiw	r24, 0x01	; 1
 ac4:	4c 01       	movw	r8, r24
 ac6:	fa 94       	dec	r15
 ac8:	ff 20       	and	r15, r15
 aca:	59 f0       	breq	.+22     	; 0xae2 <vfscanf+0x1b6>
 acc:	c6 01       	movw	r24, r12
 ace:	43 d0       	rcall	.+134    	; 0xb56 <fgetc>
 ad0:	3c 01       	movw	r6, r24
 ad2:	97 fd       	sbrc	r25, 7
 ad4:	06 c0       	rjmp	.+12     	; 0xae2 <vfscanf+0x1b6>
 ad6:	2b d0       	rcall	.+86     	; 0xb2e <isspace>
 ad8:	89 2b       	or	r24, r25
 ada:	69 f3       	breq	.-38     	; 0xab6 <vfscanf+0x18a>
 adc:	b6 01       	movw	r22, r12
 ade:	c3 01       	movw	r24, r6
 ae0:	78 d0       	rcall	.+240    	; 0xbd2 <ungetc>
 ae2:	81 14       	cp	r8, r1
 ae4:	91 04       	cpc	r9, r1
 ae6:	a1 f0       	breq	.+40     	; 0xb10 <vfscanf+0x1e4>
 ae8:	f4 01       	movw	r30, r8
 aea:	10 82       	st	Z, r1
 aec:	11 c0       	rjmp	.+34     	; 0xb10 <vfscanf+0x1e4>
 aee:	00 62       	ori	r16, 0x20	; 32
 af0:	03 c0       	rjmp	.+6      	; 0xaf8 <vfscanf+0x1cc>
 af2:	00 61       	ori	r16, 0x10	; 16
 af4:	01 c0       	rjmp	.+2      	; 0xaf8 <vfscanf+0x1cc>
 af6:	00 64       	ori	r16, 0x40	; 64
 af8:	20 2f       	mov	r18, r16
 afa:	a4 01       	movw	r20, r8
 afc:	6f 2d       	mov	r22, r15
 afe:	c6 01       	movw	r24, r12
 b00:	d1 dd       	rcall	.-1118   	; 0x6a4 <conv_int>
 b02:	81 11       	cpse	r24, r1
 b04:	05 c0       	rjmp	.+10     	; 0xb10 <vfscanf+0x1e4>
 b06:	f6 01       	movw	r30, r12
 b08:	83 81       	ldd	r24, Z+3	; 0x03
 b0a:	80 73       	andi	r24, 0x30	; 48
 b0c:	29 f4       	brne	.+10     	; 0xb18 <vfscanf+0x1ec>
 b0e:	06 c0       	rjmp	.+12     	; 0xb1c <vfscanf+0x1f0>
 b10:	00 fd       	sbrc	r16, 0
 b12:	18 cf       	rjmp	.-464    	; 0x944 <vfscanf+0x18>
 b14:	53 94       	inc	r5
 b16:	16 cf       	rjmp	.-468    	; 0x944 <vfscanf+0x18>
 b18:	55 20       	and	r5, r5
 b1a:	19 f0       	breq	.+6      	; 0xb22 <vfscanf+0x1f6>
 b1c:	85 2d       	mov	r24, r5
 b1e:	90 e0       	ldi	r25, 0x00	; 0
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <vfscanf+0x1fa>
 b22:	8f ef       	ldi	r24, 0xFF	; 255
 b24:	9f ef       	ldi	r25, 0xFF	; 255
 b26:	cd b7       	in	r28, 0x3d	; 61
 b28:	de b7       	in	r29, 0x3e	; 62
 b2a:	ef e0       	ldi	r30, 0x0F	; 15
 b2c:	8a c0       	rjmp	.+276    	; 0xc42 <__epilogue_restores__+0x6>

00000b2e <isspace>:
 b2e:	91 11       	cpse	r25, r1
 b30:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__ctype_isfalse>
 b34:	80 32       	cpi	r24, 0x20	; 32
 b36:	19 f0       	breq	.+6      	; 0xb3e <isspace+0x10>
 b38:	89 50       	subi	r24, 0x09	; 9
 b3a:	85 50       	subi	r24, 0x05	; 5
 b3c:	c8 f7       	brcc	.-14     	; 0xb30 <isspace+0x2>
 b3e:	08 95       	ret

00000b40 <strchr_P>:
 b40:	fc 01       	movw	r30, r24
 b42:	05 90       	lpm	r0, Z+
 b44:	06 16       	cp	r0, r22
 b46:	21 f0       	breq	.+8      	; 0xb50 <strchr_P+0x10>
 b48:	00 20       	and	r0, r0
 b4a:	d9 f7       	brne	.-10     	; 0xb42 <strchr_P+0x2>
 b4c:	c0 01       	movw	r24, r0
 b4e:	08 95       	ret
 b50:	31 97       	sbiw	r30, 0x01	; 1
 b52:	cf 01       	movw	r24, r30
 b54:	08 95       	ret

00000b56 <fgetc>:
 b56:	cf 93       	push	r28
 b58:	df 93       	push	r29
 b5a:	ec 01       	movw	r28, r24
 b5c:	2b 81       	ldd	r18, Y+3	; 0x03
 b5e:	20 ff       	sbrs	r18, 0
 b60:	33 c0       	rjmp	.+102    	; 0xbc8 <fgetc+0x72>
 b62:	26 ff       	sbrs	r18, 6
 b64:	0a c0       	rjmp	.+20     	; 0xb7a <fgetc+0x24>
 b66:	2f 7b       	andi	r18, 0xBF	; 191
 b68:	2b 83       	std	Y+3, r18	; 0x03
 b6a:	8e 81       	ldd	r24, Y+6	; 0x06
 b6c:	9f 81       	ldd	r25, Y+7	; 0x07
 b6e:	01 96       	adiw	r24, 0x01	; 1
 b70:	8e 83       	std	Y+6, r24	; 0x06
 b72:	9f 83       	std	Y+7, r25	; 0x07
 b74:	8a 81       	ldd	r24, Y+2	; 0x02
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	29 c0       	rjmp	.+82     	; 0xbcc <fgetc+0x76>
 b7a:	22 ff       	sbrs	r18, 2
 b7c:	0f c0       	rjmp	.+30     	; 0xb9c <fgetc+0x46>
 b7e:	e8 81       	ld	r30, Y
 b80:	f9 81       	ldd	r31, Y+1	; 0x01
 b82:	80 81       	ld	r24, Z
 b84:	08 2e       	mov	r0, r24
 b86:	00 0c       	add	r0, r0
 b88:	99 0b       	sbc	r25, r25
 b8a:	00 97       	sbiw	r24, 0x00	; 0
 b8c:	19 f4       	brne	.+6      	; 0xb94 <fgetc+0x3e>
 b8e:	20 62       	ori	r18, 0x20	; 32
 b90:	2b 83       	std	Y+3, r18	; 0x03
 b92:	1a c0       	rjmp	.+52     	; 0xbc8 <fgetc+0x72>
 b94:	31 96       	adiw	r30, 0x01	; 1
 b96:	e8 83       	st	Y, r30
 b98:	f9 83       	std	Y+1, r31	; 0x01
 b9a:	0e c0       	rjmp	.+28     	; 0xbb8 <fgetc+0x62>
 b9c:	ea 85       	ldd	r30, Y+10	; 0x0a
 b9e:	fb 85       	ldd	r31, Y+11	; 0x0b
 ba0:	09 95       	icall
 ba2:	97 ff       	sbrs	r25, 7
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <fgetc+0x62>
 ba6:	2b 81       	ldd	r18, Y+3	; 0x03
 ba8:	01 96       	adiw	r24, 0x01	; 1
 baa:	11 f0       	breq	.+4      	; 0xbb0 <fgetc+0x5a>
 bac:	80 e2       	ldi	r24, 0x20	; 32
 bae:	01 c0       	rjmp	.+2      	; 0xbb2 <fgetc+0x5c>
 bb0:	80 e1       	ldi	r24, 0x10	; 16
 bb2:	82 2b       	or	r24, r18
 bb4:	8b 83       	std	Y+3, r24	; 0x03
 bb6:	08 c0       	rjmp	.+16     	; 0xbc8 <fgetc+0x72>
 bb8:	2e 81       	ldd	r18, Y+6	; 0x06
 bba:	3f 81       	ldd	r19, Y+7	; 0x07
 bbc:	2f 5f       	subi	r18, 0xFF	; 255
 bbe:	3f 4f       	sbci	r19, 0xFF	; 255
 bc0:	2e 83       	std	Y+6, r18	; 0x06
 bc2:	3f 83       	std	Y+7, r19	; 0x07
 bc4:	99 27       	eor	r25, r25
 bc6:	02 c0       	rjmp	.+4      	; 0xbcc <fgetc+0x76>
 bc8:	8f ef       	ldi	r24, 0xFF	; 255
 bca:	9f ef       	ldi	r25, 0xFF	; 255
 bcc:	df 91       	pop	r29
 bce:	cf 91       	pop	r28
 bd0:	08 95       	ret

00000bd2 <ungetc>:
 bd2:	fb 01       	movw	r30, r22
 bd4:	23 81       	ldd	r18, Z+3	; 0x03
 bd6:	20 ff       	sbrs	r18, 0
 bd8:	12 c0       	rjmp	.+36     	; 0xbfe <ungetc+0x2c>
 bda:	26 fd       	sbrc	r18, 6
 bdc:	10 c0       	rjmp	.+32     	; 0xbfe <ungetc+0x2c>
 bde:	8f 3f       	cpi	r24, 0xFF	; 255
 be0:	3f ef       	ldi	r19, 0xFF	; 255
 be2:	93 07       	cpc	r25, r19
 be4:	61 f0       	breq	.+24     	; 0xbfe <ungetc+0x2c>
 be6:	82 83       	std	Z+2, r24	; 0x02
 be8:	2f 7d       	andi	r18, 0xDF	; 223
 bea:	20 64       	ori	r18, 0x40	; 64
 bec:	23 83       	std	Z+3, r18	; 0x03
 bee:	26 81       	ldd	r18, Z+6	; 0x06
 bf0:	37 81       	ldd	r19, Z+7	; 0x07
 bf2:	21 50       	subi	r18, 0x01	; 1
 bf4:	31 09       	sbc	r19, r1
 bf6:	26 83       	std	Z+6, r18	; 0x06
 bf8:	37 83       	std	Z+7, r19	; 0x07
 bfa:	99 27       	eor	r25, r25
 bfc:	08 95       	ret
 bfe:	8f ef       	ldi	r24, 0xFF	; 255
 c00:	9f ef       	ldi	r25, 0xFF	; 255
 c02:	08 95       	ret

00000c04 <__ctype_isfalse>:
 c04:	99 27       	eor	r25, r25
 c06:	88 27       	eor	r24, r24

00000c08 <__ctype_istrue>:
 c08:	08 95       	ret

00000c0a <__prologue_saves__>:
 c0a:	2f 92       	push	r2
 c0c:	3f 92       	push	r3
 c0e:	4f 92       	push	r4
 c10:	5f 92       	push	r5
 c12:	6f 92       	push	r6
 c14:	7f 92       	push	r7
 c16:	8f 92       	push	r8
 c18:	9f 92       	push	r9
 c1a:	af 92       	push	r10
 c1c:	bf 92       	push	r11
 c1e:	cf 92       	push	r12
 c20:	df 92       	push	r13
 c22:	ef 92       	push	r14
 c24:	ff 92       	push	r15
 c26:	0f 93       	push	r16
 c28:	1f 93       	push	r17
 c2a:	cf 93       	push	r28
 c2c:	df 93       	push	r29
 c2e:	cd b7       	in	r28, 0x3d	; 61
 c30:	de b7       	in	r29, 0x3e	; 62
 c32:	ca 1b       	sub	r28, r26
 c34:	db 0b       	sbc	r29, r27
 c36:	cd bf       	out	0x3d, r28	; 61
 c38:	de bf       	out	0x3e, r29	; 62
 c3a:	09 94       	ijmp

00000c3c <__epilogue_restores__>:
 c3c:	2a 88       	ldd	r2, Y+18	; 0x12
 c3e:	39 88       	ldd	r3, Y+17	; 0x11
 c40:	48 88       	ldd	r4, Y+16	; 0x10
 c42:	5f 84       	ldd	r5, Y+15	; 0x0f
 c44:	6e 84       	ldd	r6, Y+14	; 0x0e
 c46:	7d 84       	ldd	r7, Y+13	; 0x0d
 c48:	8c 84       	ldd	r8, Y+12	; 0x0c
 c4a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c4c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c4e:	b9 84       	ldd	r11, Y+9	; 0x09
 c50:	c8 84       	ldd	r12, Y+8	; 0x08
 c52:	df 80       	ldd	r13, Y+7	; 0x07
 c54:	ee 80       	ldd	r14, Y+6	; 0x06
 c56:	fd 80       	ldd	r15, Y+5	; 0x05
 c58:	0c 81       	ldd	r16, Y+4	; 0x04
 c5a:	1b 81       	ldd	r17, Y+3	; 0x03
 c5c:	aa 81       	ldd	r26, Y+2	; 0x02
 c5e:	b9 81       	ldd	r27, Y+1	; 0x01
 c60:	ce 0f       	add	r28, r30
 c62:	d1 1d       	adc	r29, r1
 c64:	cd bf       	out	0x3d, r28	; 61
 c66:	de bf       	out	0x3e, r29	; 62
 c68:	ed 01       	movw	r28, r26
 c6a:	08 95       	ret

00000c6c <_exit>:
 c6c:	f8 94       	cli

00000c6e <__stop_program>:
 c6e:	ff cf       	rjmp	.-2      	; 0xc6e <__stop_program>
